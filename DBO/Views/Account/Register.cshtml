@using DBO.Common
@model DBO.Data.ViewModels.CreateCompanyViewModel
@{
    ViewBag.Title = ResourceString.Instance.Register;
    Layout = "~/Views/Shared/_Layout_Public.cshtml";
}

<section class="section-bunner d-flex flex-column justify-content-end">
    <div class="form-wrap">
        <div class="d-flex justify-content-center">
            @using (Html.BeginForm("Register", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4 class="white uppercase">@ResourceString.Instance.CreateNewCompany</h4>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                if (!ViewData.ModelState.IsValid && ViewBag.DuplicateId != null && ViewBag.IsCompanyClaimed == false)
                {
                    @Html.ActionLink("You can claim this company", "Details", "Companies", new { id = ViewBag.DuplicateId }, null);
                    <br /><br />
                }
                <div class="form-group">
                    @Html.RadioButtonFor(m => m.Role, DBO.Common.Constants.CompanyRole, new { style = "margin-left:15px;-ms-transform: scale(1.5);-webkit-transform: scale(1.5);transform:scale(1.5);", @checked = "checked" })
                    <label class="white">Company</label>
                    @Html.RadioButtonFor(m => m.Role, DBO.Common.Constants.EmployeeRole, new { style = "margin-left:35px;-ms-transform: scale(1.5);-webkit-transform: scale(1.5);transform:scale(1.5); " })
                    <label class="white">Private person</label>
                    @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = ResourceString.Instance.CompanyName })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email" })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.TextBoxFor(m => m.Phone, new { @class = "form-control", placeholder = ResourceString.Instance.Phone })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <div class="">
                        <input type="submit" value=@ResourceString.Instance.Register class="btn btn-dark btn-block" />
                    </div>
                </div>
            }
        </div>
    </div>
</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
            $("input[value='employee']").on("click", function () {
                $("#Name").attr("placeholder", "@ResourceString.Instance.Name");
            });
            $("input[value='company']").on("click", function () {
                $("#Name").attr("placeholder", "@ResourceString.Instance.CompanyName");
            });
    </script>
}
